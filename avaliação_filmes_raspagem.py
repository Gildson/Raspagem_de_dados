# -*- coding: utf-8 -*-
"""Avaliação+filmes_raspagem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yDcDK64_7SYWthIoe3XlFwRh3n4PDVBs
"""

import requests
import pandas as pd
import numpy as np
import re
from bs4 import BeautifulSoup

#Recebe a url desejada.
#É necessário uma análise um pouco detalhada do site que desejamos raspar, para o caso a baixo o site utilizado como exemplo
#foi o AdoroCinema, antes de começar a raspa os dados inspecionei o site na buscar de tags relevantes para a raspagem.
#Após essa inspeção montei a função abaixo

def buscar_avaliacao_filmes(url):
  lista_avaliacao = []
  #Burla o navegador, para não bloquear o robô de busca
  headers = {'user-agent': 'Mozilla/5.0'}

  #Pega todas as páginas do site
  for pages in range(1,5):
    #Monta a url de busca
    req = url + '?page=' + str(pages)
    #Aplica a busca
    filmes = requests.get(req, headers=headers)
    #Transforma para alto mais legível
    soup = BeautifulSoup(filmes.text, 'html.parser')
    #Dentro do soup encontra todas as tags li com o atributo class: mdl (igual conceito para as trẽs listas)
    lista_nome_filmes = soup.find_all('li', attrs={'class': 'mdl'})
    lista_caracteristicas_filmes = soup.find_all('div', attrs={'class': 'meta-body'})
    lista_avaliacao_filmes = soup.find_all('div', attrs={'class': 'rating-holder rating-holder-3'})

    #Dentro de cada lista montada baseada em um parâmetro de buscar, buscamos pela tag que nós interessa e zip o conteúdo encontrado
    for nome, caracter, avali in zip(lista_nome_filmes, lista_caracteristicas_filmes, lista_avaliacao_filmes):
      #Busca pela atributo desejado
      nome_filme = nome.find('a').text
      caracter_filme = caracter.find('div').text.replace('\n', '').replace('/', ',').replace(' ', '').split(',')
      avaliacao_filme = avali.find('span').text
      #Monta um vetor com os dados raspados
      lista_avaliacao.append((nome_filme, caracter_filme, avaliacao_filme))

    #Gera um dataframe
    dataset_avaliacao = pd.DataFrame(lista_avaliacao, columns=['Nome', 'Caracteristicas', 'Avaliação'])
  
  return dataset_avaliacao

df1 = buscar_avaliacao_filmes('https://www.adorocinema.com/filmes/melhores/decada-2020/ano-2021/')
df1

#Salvar o dataset
df1.to_csv('avaliação_filmes_2021.csv')
